name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: marimo

jobs:

  typescript-lint:
    name: TypeScript / Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: biomejs/setup-biome@v2
        with:
          working-dir: "extension"

      - name: Run Biome
        run: biome ci

      - name: Validate marimo CSS variable overrides
        run: node extension/scripts/check-css-variables.mjs

  typescript-typecheck:
    name: TypeScript / Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: marimo-lsp

      - uses: actions/checkout@v4
        with:
          repository: marimo-team/marimo
          ref: main
          path: marimo

      - uses: pnpm/action-setup@v4
        with:
          package_json_file: marimo-lsp/extension/package.json

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
          cache-dependency-path: |
            marimo/pnpm-lock.yaml
            marimo-lsp/extension/pnpm-lock.yaml

      - name: Build marimo packages
        run: |
          cd marimo
          pnpm turbo run build --filter="./packages/*"

      - name: Install and typecheck extension
        run: |
          cd marimo-lsp/extension
          pnpm install
          # make sure our types are up to date
          node scripts/codegen.mjs
          pnpm turbo typecheck-ci

  typescript-test:
    name: TypeScript / Test / ${{ matrix.os }}
    strategy:
      matrix:
        # TODO: more platforms
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: marimo-lsp

      - uses: actions/checkout@v4
        with:
          repository: marimo-team/marimo
          ref: main
          path: marimo

      - uses: astral-sh/setup-uv@v6

      - uses: pnpm/action-setup@v4
        with:
          package_json_file: marimo-lsp/extension/package.json

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
          cache-dependency-path: |
            marimo/pnpm-lock.yaml
            marimo-lsp/extension/pnpm-lock.yaml

      - name: Build marimo packages
        run: |
          cd marimo
          pnpm --recursive --filter "./packages/*" codegen
          pnpm --recursive --filter "./packages/*" build

      - name: Install and build the extension
        working-directory: marimo-lsp/extension
        run: |
          pnpm install
          # make sure our types are up to date
          node scripts/codegen.mjs
          pnpm build
          pnpm embed-sdist

      - name: vitest
        run: pnpm test
        working-directory: marimo-lsp/extension

      - name: vscode-test (Linux)
        run: xvfb-run -a pnpm test:extension
        working-directory: marimo-lsp/extension
        if: runner.os == 'Linux'
      - name: vscode-test (Non-Linux)
        run: pnpm test:extension
        working-directory: marimo-lsp/extension
        if: runner.os != 'Linux'

  python-lint:
    name: Python / Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: |
          uv run ruff format --check
          uv run ruff check

  python-test:
    name: Python / Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv run pytest

  python-typecheck:
    name: Python / Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv run ty check
