name: Release

on:
  workflow_dispatch:
    inputs:
      pre-release:
        description: "Release as pre-release"
        required: true
        default: true
        type: boolean
      version-bump:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          # Not yet...
          # - major

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          path: marimo-lsp

      - uses: actions/checkout@v4
        with:
          repository: marimo-team/marimo
          ref: main
          path: marimo

      - uses: astral-sh/setup-uv@v6

      - uses: pnpm/action-setup@v4
        with:
          package_json_file: marimo-lsp/extension/package.json

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "pnpm"
          cache-dependency-path: |
            marimo/pnpm-lock.yaml
            marimo-lsp/extension/pnpm-lock.yaml

      - name: Build marimo packages
        run: |
          cd marimo
          pnpm --recursive --filter "./packages/*" codegen
          pnpm --recursive --filter "./packages/*" build

      - name: Bump version, commit & push
        working-directory: marimo-lsp/extension
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          pnpm version ${{ inputs.version-bump }} --no-git-tag-version
          git add package.json
          if [ "${{ inputs.pre-release }}" = "true" ]; then
            git commit -m "v$(cat package.json | jq -r '.version') (pre-release)"
          else
            git commit -m "v$(cat package.json | jq -r '.version')"
          fi
          git push origin HEAD:main

      - name: Install packages and build extension
        working-directory: marimo-lsp/extension
        run: |
          pnpm install
          pnpm build
          pnpm embed-sdist

      - name: Package the extension
        working-directory: marimo-lsp/extension
        run: npx vsce package

      - name: Publish to marketplace
        working-directory: marimo-lsp/extension
        run: |
          if [ "${{ inputs.pre-release }}" = "true" ]; then
            npx vsce publish --pre-release --skip-duplicate
          else
            npx vsce publish --skip-duplicate
          fi
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Publish to Open VSX Registry
        working-directory: marimo-lsp/extension
        run: |
          if [ "${{ inputs.pre-release }}" = "true" ]; then
            npx ovsx publish --pre-release --skip-duplicate
          else
            npx ovsx publish --skip-duplicate
          fi
        env:
          OVSX_PAT: ${{ secrets.OPEN_VSX_TOKEN }}

      - name: Create GitHub Release
        working-directory: marimo-lsp/extension
        run: |
          gh release create $(cat package.json | jq -r '.version') --generate-notes *.vsix
        env:
          GH_TOKEN: ${{ github.token }}
